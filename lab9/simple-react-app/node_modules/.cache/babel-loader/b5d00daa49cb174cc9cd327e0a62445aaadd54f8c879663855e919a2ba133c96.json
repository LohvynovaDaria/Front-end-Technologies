{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\49173\\\\Desktop\\\\My projects\\\\6_semester\\\\Front-end Technologies\\\\lab9\\\\simple-react-app\\\\src\\\\Components\\\\Diagram\\\\Diagram.jsx\";\nimport React from 'react';\nimport \"./diagramSection.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Diagram(props) {\n  console.log(props);\n  const expenseItems = props.expenseItems;\n  const year = props.yearToDisplay;\n  const totalPricesByMonth = expenseItems.reduce((acc, item) => {\n    const date = new Date(item.date);\n    const itemYear = date.getFullYear();\n    const itemMonth = date.getMonth();\n    if (itemYear === year) {\n      console.log(itemMonth + \" \" + acc[itemMonth] + \"$\");\n      acc[itemMonth] = acc[itemMonth] || 0;\n      acc[itemMonth] += parseInt(item.amount);\n    }\n    return acc;\n  }, Array(12).fill(0));\n  const maxTotal = Math.max(...totalPricesByMonth);\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diagram-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: months.map((month, index) => {\n        const total = totalPricesByMonth[index] || 0;\n        const percentageOfMax = maxTotal > 0 ? (total / maxTotal * 100).toFixed(2) : '0.00';\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"listBox\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"listBox-filling\",\n              style: {\n                height: `${percentageOfMax}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.MonthRow,\n      children: months.map((month, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: month\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_c = Diagram;\nexport default Diagram;\nvar _c;\n$RefreshReg$(_c, \"Diagram\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Diagram","props","console","log","expenseItems","year","yearToDisplay","totalPricesByMonth","reduce","acc","item","date","Date","itemYear","getFullYear","itemMonth","getMonth","parseInt","amount","Array","fill","maxTotal","Math","max","months","className","children","map","month","index","total","percentageOfMax","toFixed","style","height","fileName","_jsxFileName","lineNumber","columnNumber","classes","MonthRow","_c","$RefreshReg$"],"sources":["C:/Users/49173/Desktop/My projects/6_semester/Front-end Technologies/lab9/simple-react-app/src/Components/Diagram/Diagram.jsx"],"sourcesContent":["import React from 'react';\r\nimport \"./diagramSection.css\";\r\n\r\nfunction Diagram(props) {\r\n    console.log(props)\r\n    const expenseItems = props.expenseItems;\r\n    const year = props.yearToDisplay;\r\n\r\n    const totalPricesByMonth = expenseItems.reduce((acc, item) => {\r\n        const date = new Date(item.date);\r\n        const itemYear = date.getFullYear();\r\n        const itemMonth = date.getMonth(); \r\n        if (itemYear === year) {\r\n            console.log(itemMonth + \" \" + acc[itemMonth] + \"$\")\r\n            acc[itemMonth] = acc[itemMonth] || 0;\r\n            acc[itemMonth] += parseInt(item.amount);  \r\n        }\r\n        return acc;\r\n    }, Array(12).fill(0));\r\n\r\n    const maxTotal = Math.max(...totalPricesByMonth);\r\n\r\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\r\n    return (\r\n        <div className=\"diagram-container\">\r\n            <ul className=\"list\">\r\n                {months.map((month, index) => {\r\n                    const total = totalPricesByMonth[index] || 0;\r\n                    const percentageOfMax = maxTotal > 0 ? ((total / maxTotal) * 100).toFixed(2) : '0.00';\r\n                    return (\r\n                        <li key={index}>\r\n                            <div className=\"listBox\">\r\n                                <div className=\"listBox-filling\" style={{height: `${percentageOfMax}%`}}></div>\r\n                            </div>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n            <ul className={classes.MonthRow}>\r\n                {months.map((month,index) => {\r\n                    return (\r\n                        <li>{month}</li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Diagram;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}