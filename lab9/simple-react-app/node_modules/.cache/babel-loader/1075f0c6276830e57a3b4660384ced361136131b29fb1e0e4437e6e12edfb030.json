{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\49173\\\\Desktop\\\\My projects\\\\6_semester\\\\Front-end Technologies\\\\lab9\\\\simple-react-app\\\\src\\\\Components\\\\Diagram\\\\Diagram.jsx\";\nimport React from 'react';\nimport \"./diagramSection.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Diagram(props) {\n  console.log(props);\n  const expenseItems = props.expenseItems;\n  const year = props.yearToDisplay;\n\n  /*const totalPricesByMonth = expenseItems.reduce((acc, item) => {\r\n      const date = new Date(item.date);\r\n      const itemYear = date.getFullYear();\r\n      const itemMonth = date.getMonth(); \r\n      if (itemYear === year) {\r\n          console.log(itemMonth + \" \" + acc[itemMonth] + \"$\")\r\n          acc[itemMonth] = acc[itemMonth] || 0;\r\n          acc[itemMonth] += parseInt(item.amount);  \r\n      }\r\n      return acc;\r\n  }, Array(12).fill(0));*/\n\n  const maxTotal = Math.max(...totalPricesByMonth);\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n  const indexes = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diagram-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: indexes.map(index => {\n        const total = totalPricesByMonth[index] || 0;\n        const percentageOfMax = maxTotal > 0 ? (total / maxTotal * 100).toFixed(2) : '0.00';\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"listBox\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"listBox_filling\",\n              style: {\n                height: `${percentageOfMax}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"MonthRow\",\n      children: months.map(month => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: month\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_c = Diagram;\nexport default Diagram;\nvar _c;\n$RefreshReg$(_c, \"Diagram\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Diagram","props","console","log","expenseItems","year","yearToDisplay","maxTotal","Math","max","totalPricesByMonth","months","indexes","className","children","map","index","total","percentageOfMax","toFixed","style","height","fileName","_jsxFileName","lineNumber","columnNumber","month","_c","$RefreshReg$"],"sources":["C:/Users/49173/Desktop/My projects/6_semester/Front-end Technologies/lab9/simple-react-app/src/Components/Diagram/Diagram.jsx"],"sourcesContent":["import React from 'react';\r\nimport \"./diagramSection.css\";\r\n\r\nfunction Diagram(props) {\r\n    console.log(props)\r\n    const expenseItems = props.expenseItems;\r\n    const year = props.yearToDisplay;\r\n\r\n    /*const totalPricesByMonth = expenseItems.reduce((acc, item) => {\r\n        const date = new Date(item.date);\r\n        const itemYear = date.getFullYear();\r\n        const itemMonth = date.getMonth(); \r\n        if (itemYear === year) {\r\n            console.log(itemMonth + \" \" + acc[itemMonth] + \"$\")\r\n            acc[itemMonth] = acc[itemMonth] || 0;\r\n            acc[itemMonth] += parseInt(item.amount);  \r\n        }\r\n        return acc;\r\n    }, Array(12).fill(0));*/\r\n\r\n    const maxTotal = Math.max(...totalPricesByMonth);\r\n\r\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\r\n    const indexes = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\r\n    return (\r\n        <div className=\"diagram-container\">\r\n            <ul className=\"list\">\r\n                {indexes.map((index) => {\r\n                    const total = totalPricesByMonth[index] || 0;\r\n                    const percentageOfMax = maxTotal > 0 ? ((total / maxTotal) * 100).toFixed(2) : '0.00';\r\n                    return (\r\n                        <li key={index}>\r\n                            <div className=\"listBox\">\r\n                                <div className=\"listBox_filling\" style={{height: `${percentageOfMax}%`}}></div>\r\n                            </div>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n            <ul className=\"MonthRow\">\r\n                {months.map((month) => {\r\n                    return (\r\n                        <li>{month}</li>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Diagram;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,OAAOA,CAACC,KAAK,EAAE;EACpBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,MAAMG,YAAY,GAAGH,KAAK,CAACG,YAAY;EACvC,MAAMC,IAAI,GAAGJ,KAAK,CAACK,aAAa;;EAEhC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI,MAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGC,kBAAkB,CAAC;EAEhD,MAAMC,MAAM,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;EACtG,MAAMC,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACvD,oBACIb,OAAA;IAAKc,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAC9Bf,OAAA;MAAIc,SAAS,EAAC,MAAM;MAAAC,QAAA,EACfF,OAAO,CAACG,GAAG,CAAEC,KAAK,IAAK;QACpB,MAAMC,KAAK,GAAGP,kBAAkB,CAACM,KAAK,CAAC,IAAI,CAAC;QAC5C,MAAME,eAAe,GAAGX,QAAQ,GAAG,CAAC,GAAG,CAAEU,KAAK,GAAGV,QAAQ,GAAI,GAAG,EAAEY,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM;QACrF,oBACIpB,OAAA;UAAAe,QAAA,eACIf,OAAA;YAAKc,SAAS,EAAC,SAAS;YAAAC,QAAA,eACpBf,OAAA;cAAKc,SAAS,EAAC,iBAAiB;cAACO,KAAK,EAAE;gBAACC,MAAM,EAAG,GAAEH,eAAgB;cAAE;YAAE;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9E;QAAC,GAHDT,KAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CAAC;MAEb,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACL1B,OAAA;MAAIc,SAAS,EAAC,UAAU;MAAAC,QAAA,EACnBH,MAAM,CAACI,GAAG,CAAEW,KAAK,IAAK;QACnB,oBACI3B,OAAA;UAAAe,QAAA,EAAKY;QAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAExB,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACE,EAAA,GA7CQ3B,OAAO;AA+ChB,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}